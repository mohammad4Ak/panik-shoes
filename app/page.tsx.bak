"use client"

import { useState, useEffect } from 'react'
import { Bell, Package, ShoppingBag, Users, AlertTriangle, BarChart, Menu, X, ChevronRight, ChevronLeft } from 'lucide-react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { ThemeToggle } from "@/components/theme-toggle"
import {
    Sheet,
    SheetContent,
    SheetDescription,
    SheetHeader,
    SheetTitle,
    SheetTrigger,
} from "@/components/ui/sheet"
import ProductCatalog from './products/page'
import OrderManagement from './orders/page'
import ProductionTracking from './production/page'
import InventoryManagement from './inventory/page'
import SalesOverview from './sales/page'
import AddProduct from '@/components/add-product'

export default function AdminDashboard() {
    const [activePage, setActivePage] = useState('dashboard')
    const [showAddProduct, setShowAddProduct] = useState(false)
    const [isSidePanelOpen, setIsSidePanelOpen] = useState(true)
    const [isMobile, setIsMobile] = useState(false)

    useEffect(() => {
        const checkIfMobile = () => {
            setIsMobile(window.innerWidth < 768)
            if (window.innerWidth < 768) {
                setIsSidePanelOpen(false)
            }
        }

        checkIfMobile()
        window.addEventListener('resize', checkIfMobile)

        return () => {
            window.removeEventListener('resize', checkIfMobile)
        }
    }, [])

    const renderPage = () => {
        switch (activePage) {
            case 'products':
                return (
                    <div>
                        <div className="flex justify-between items-center mb-4">
                            <h2 className="text-2xl font-bold">محصولات</h2>
                            <Button onClick={() => setShowAddProduct(true)}>اضافه کردن محصول جدید</Button>
                        </div>
                        {showAddProduct ? (
                            <div className="mb-6">
                                <h3 className="text-xl font-semibold mb-2">اضافه کردن محصول جدید</h3>
                                <AddProduct onProductAdded={() => setShowAddProduct(false)}/>
                            </div>
                        ) : (
                            <ProductCatalog/>
                        )}
                    </div>
                )
            case 'orders':
                return <OrderManagement/>
            case 'production':
                return <ProductionTracking/>
            case 'inventory':
                return <InventoryManagement/>
            case 'sales':
                return <SalesOverview/>
            default:
                return (
                    <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">همه محصولات</CardTitle>
                                <Package className="h-4 w-4 text-muted-foreground"/>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">25</div>
                                <p className="text-xs text-muted-foreground">+2 از ماه گذشته</p>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">سفارشات معلق</CardTitle>
                                <ShoppingBag className="h-4 w-4 text-muted-foreground"/>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">12</div>
                                <p className="text-xs text-muted-foreground">+3 از دیروز</p>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">هشدارهای سهام کم</CardTitle>
                                <AlertTriangle className="h-4 w-4 text-muted-foreground"/>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">3</div>
                                <p className="text-xs text-muted-foreground">نیاز به اقدام دارد</p>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">کل فروش</CardTitle>
                                <BarChart className="h-4 w-4 text-muted-foreground"/>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">4,325.50 دلار</div>
                                <p className="text-xs text-muted-foreground">+ 20.1٪ نسبت به ماه گذشته</p>
                            </CardContent>
                        </Card>
                    </div>
                )
        }
    }

    const NavLink = ({ href, onClick, children, isActive }) => (
        <a
            href={href}
            onClick={onClick}
            className={`flex items-center p-2 text-base font-normal rounded-lg ${
                isActive ? 'bg-gray-100 dark:bg-gray-700' : 'hover:bg-gray-100 dark:hover:bg-gray-700'
            }`}
        >
            {children}
        </a>
    )

    const SidePanel = () => (
        <div className={`flex flex-col h-full p-3 bg-white dark:bg-gray-800 shadow transition-all duration-300 ${
            isSidePanelOpen ? 'w-60' : (isMobile ? 'w-0' : 'w-16')
        }`}>
            <div className="space-y-3">
                <div className="flex items-center justify-between">
                    {isSidePanelOpen && <h2 className="text-xl font-bold">پانیک</h2>}
                    {!isMobile && (
                        <Button
                            onClick={() => setIsSidePanelOpen(!isSidePanelOpen)}
                            variant="ghost"
                            size="icon"
                            className="rounded-full"
                        >
                            {isSidePanelOpen ? <ChevronRight className="h-4 w-4" /> : <ChevronLeft className="h-4 w-4" />}
                        </Button>
                    )}
                </div>
                <div className="flex-1">
                    <ul className="pt-2 pb-4 space-y-1 text-sm">
                        <li>
                            <NavLink
                                href="#"
                                onClick={() => {
                                    setActivePage('products')
                                    if (isMobile) setIsSidePanelOpen(false)
                                }}
                                isActive={activePage === 'products'}
                            >
                                {isSidePanelOpen ? 'محصولات' : <Package className="h-5 w-5" />}
                            </NavLink>
                        </li>
                        <li>
                            <NavLink
                                href="#"
                                onClick={() => {
                                    setActivePage('orders')
                                    if (isMobile) setIsSidePanelOpen(false)
                                }}
                                isActive={activePage === 'orders'}
                            >
                                {isSidePanelOpen ? 'سفارشات' : <ShoppingBag className="h-5 w-5" />}
                            </NavLink>
                        </li>
                        <li>
                            <NavLink
                                href="#"
                                onClick={() => {
                                    setActivePage('production')
                                    if (isMobile) setIsSidePanelOpen(false)
                                }}
                                isActive={activePage === 'production'}
                            >
                                {isSidePanelOpen ? 'تولیدات' : <BarChart className="h-5 w-5" />}
                            </NavLink>
                        </li>
                        <li>
                            <NavLink
                                href="#"
                                onClick={() => {
                                    setActivePage('inventory')
                                    if (isMobile) setIsSidePanelOpen(false)
                                }}
                                isActive={activePage === 'inventory'}
                            >
                                {isSidePanelOpen ? 'موجودی' : <Package className="h-5 w-5" />}
                            </NavLink>
                        </li>
                        <li>
                            <NavLink
                                href="#"
                                onClick={() => {
                                    setActivePage('sales')
                                    if (isMobile) setIsSidePanelOpen(false)
                                }}
                                isActive={activePage === 'sales'}
                            >
                                {isSidePanelOpen ? 'فروش' : <BarChart className="h-5 w-5" />}
                            </NavLink>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    )

    return (
        <div className="flex h-screen bg-gray-100 dark:bg-gray-900" dir="rtl">
            {isMobile ? (
                <Sheet open={isSidePanelOpen} onOpenChange={setIsSidePanelOpen}>
                    <SheetContent side="right" className="p-0 w-60">
                        <SidePanel />
                    </SheetContent>
                </Sheet>
            ) : (
                <SidePanel />
            )}
            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="flex items-center justify-between p-4 bg-white dark:bg-gray-800 shadow">
                    <div className="flex items-center">
                        {isMobile && (
                            <Button variant="ghost" size="icon" onClick={() => setIsSidePanelOpen(true)} className="mr-2">
                                <Menu className="h-6 w-6" />
                            </Button>
                        )}
                        <Package className="h-6 w-6 mr-2"/>
                        <span className="font-semibold text-xl">داشبورد</span>
                    </div>
                    <div className="flex items-center space-x-4">
                        <ThemeToggle/>
                        <Button className="rounded-full" size="icon" variant="ghost">
                            <Bell className="h-4 w-4"/>
                            <span className="sr-only">اطلاعیه ها</span>
                        </Button>
                        <Button className="rounded-full" size="icon" variant="ghost">
                            <Users className="h-4 w-4"/>
                            <span className="sr-only">کاربران</span>
                        </Button>
                    </div>
                </header>
                <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200 dark:bg-gray-900">
                    <div className="container mx-auto px-6 py-8">
                        {renderPage()}
                    </div>
                </main>
            </div>
        </div>
    )
}